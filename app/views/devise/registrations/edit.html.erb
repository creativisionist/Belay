<div class="header">
    <div class="header-container">
      <nav class="navbar" role="navigation">
        <div class="navbar-header">
          <button type="button" id="nav-toggle" class="navbar-toggle" data-toggle="collapse" data-target="#main-nav">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a href="#" class="navbar-brand scroll-top"><img id="logo" src="/assets/logo_v1.png"></a>
          </div>
          <div id="main-nav" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li><a href="#" class="scroll-link" data-id="edit">Edit</a></li>
            <% if user_signed_in? %>
            <li><%= link_to 'Sign out', destroy_user_session_path, :method=>'delete' %></li>
            <% end %>
          </ul>
        </div>
      </nav>
    </div>
  </div>

  <section id="edit" class="page section">
    <div class="container">
      <div class="title-edit">
        <h2>Edit <%= resource_name.to_s.humanize %></h2>
      </div>
        <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
          <%= devise_error_messages! %>

          <div class="field">
            <%= f.label :first_name %><br />
            <%= f.text_field :first_name, autofocus: true %>
          </div>

          <div class="field">
            <%= f.label :image_url %><br />
            <%= f.text_field :image_url, autofocus: true %>
          </div>

          <div class="field">
            <%= f.label :email %><br />
            <%= f.email_field :email, autofocus: true %>
          </div>

          <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
            <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
          <% end %>

          <div class="field">
            <%= f.label :password %> <i>(leave blank if you don't want to change it)</i><br />
            <%= f.password_field :password, autocomplete: "off" %>
          </div>

          <div class="field">
            <%= f.label :password_confirmation %><br />
            <%= f.password_field :password_confirmation, autocomplete: "off" %>
          </div>

          <div class="field">
            <%= f.label :current_password %> <i>(we need your current password to confirm your changes)</i><br />
            <%= f.password_field :current_password, autocomplete: "off" %>
          </div>

          <div class="actions">
            <%= f.submit "Update" %>
          </div>
        <% end %>

        <h3>Cancel my account</h3>

        <p>Unhappy? <%= button_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p>

        <%= link_to "Back", :back %>
      </div>
    </section>

    <div class="bg-edit">
    </div>

  <section class="parallax-edit">
    <div class="container">
      <h1> :) </h1>
      <div><a href="#" class="scroll-top back-to-top">^</a></div>
    </div>
  </section>



<script type="text/javascript">
$(document).ready(function() {
  // navigation click actions 
  $('.scroll-link').on('click', function(event){
    event.preventDefault();
    var sectionID = $(this).attr("data-id");
    scrollToID('#' + sectionID, 750);
  });
  // scroll to top action
  $('.scroll-top').on('click', function(event) {
    event.preventDefault();
    $('html, body').animate({scrollTop:0}, 'slow');     
  });
  // mobile nav toggle
  $('#nav-toggle').on('click', function (event) {
    event.preventDefault();
    $('#main-nav').toggleClass("open");
  });
});
// scroll function
function scrollToID(id, speed){
  var offSet = 50;
  var targetOffset = $(id).offset().top - offSet;
  var mainNav = $('#main-nav');
  $('html,body').animate({scrollTop:targetOffset}, speed);
  if (mainNav.hasClass("open")) {
    mainNav.css("height", "1px").removeClass("in").addClass("collapse");
    mainNav.removeClass("open");
  }
}
if (typeof console === "undefined") {
    console = {
        log: function() { }
    };
}
</script>


<script>
 new WOW().init();
</script>
